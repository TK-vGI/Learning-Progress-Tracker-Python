1. Name
regexp_name: "^[A-Za-z]+(?:[ '-][A-Za-z]+)*$"

Explanation of the RegExp:
  -  ^ : Anchors the match at the start of the string.
  -  [A-Za-z]+ : Matches one or more alphabetic characters for the first part of the name (e.g., John, Jean, O).
  -  (?:[ '-][A-Za-z]+)* : Non-capturing group for optional additional parts:
      -  [ '-] : Matches a space, hyphen, or apostrophe.
      -  [A-Za-z]+ : Matches one or more alphabetic characters for the next part (e.g., Smith, Claude, Neill).
      -  * : Allows zero or more occurrences of this group, enabling multiple parts (e.g., Van de Graaff).
  -  $ : Anchors the match at the end of the string.

Supported Formats:
    * Simple names: John Smith, Mary Watson.
    * Hyphenated names: Jean-Claude, Anne-Marie.
    * Names with apostrophes: O'Neill, D'Angelo.
    * Multi-part names: Robert Jemison Van de Graaff.
    * Alphanumeric characters (A-Za-z0-9) are allowed for name parts: John123.

Restrictions:
    * Spaces, hyphens, or apostrophes are allowed as connectors between name parts.
    * No leading/trailing spaces, hyphens, or apostrophes.
    * No numbers, special characters (e.g., !, @), or empty strings

2. Email
regexp_email = "^[a-zA-Z0-9]+(?:[.][a-zA-Z0-9]+)?@[a-zA-Z0-9]+[.][a-zA-Z0-9]+$"

Explanation of the RegExp:

  -  ^ : Anchors the match at the start of the string.
  -  [a-zA-Z0-9]+ : Matches one or more alphanumeric characters for the name or namesurname or name123.
  -  (?:\.[a-zA-Z0-9]+)? : Non-capturing group for an optional .surname:
      -  [.] : Literal dot (.).
      -  [a-zA-Z0-9]+ : One or more alphanumeric characters for the surname or surname123.
      -  ? : Makes the entire group optional, allowing namesurname without a dot.
  -  @ : Literal @ symbol.
  -  [a-zA-Z0-9]+ : One or more alphanumeric characters for the domain or domain123.
  -  [.] : Literal dot before the top-level domain.
  -  [a-zA-Z0-9]+ : Any number of alphanumeric characters for the top-level domain (e.g. dk,1t, net, x23).
  -  $ : Anchors the match at the end of the string.

Notes:
    * This regex supports both name.surname@domain.abc (e.g., john.doe@domain.abc) and namesurname@domain.abc
        (e.g., janesmith@company.xyz).
    * It allows:
        * Alphanumeric characters for name, surname, and domain.
        * Any number of alphanumeric characters for the top-level domain.
        * Optional dot-separated surname.

    * The pcre2 library is used for PCRE2 compatibility in Python. Ensure it's installed (pip install pcre2)
        or test in a PCRE2-compatible environment.